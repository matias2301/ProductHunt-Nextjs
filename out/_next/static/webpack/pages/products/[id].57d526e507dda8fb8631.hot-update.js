webpackHotUpdate_N_E("pages/products/[id]",{

/***/ "./pages/products/[id].js":
/*!********************************!*\
  !*** ./pages/products/[id].js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/styled-base */ "./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ "./node_modules/next/dist/client/router.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _components_layout_Layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/layout/Layout */ "./components/layout/Layout.js");
/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../firebase */ "./firebase/index.js");
/* harmony import */ var _components_layout_404__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/layout/404 */ "./components/layout/404.js");
/* harmony import */ var date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! date-fns/formatDistanceToNow */ "./node_modules/date-fns/esm/formatDistanceToNow/index.js");
/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! date-fns/locale */ "./node_modules/date-fns/esm/locale/index.js");
/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @emotion/core */ "./node_modules/@emotion/core/dist/core.browser.esm.js");
/* harmony import */ var _components_ui_FormStyles__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/ui/FormStyles */ "./components/ui/FormStyles.js");
/* harmony import */ var _components_ui_CustomButtom__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../components/ui/CustomButtom */ "./components/ui/CustomButtom.js");








var _jsxFileName = "C:\\Users\\Propietario\\Documents\\Matias\\cursos\\cursos2020\\React-Nextjs\\ProductHunt-Nextjs\\pages\\products\\[id].js",
    _this = undefined,
    _s = $RefreshSig$();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }













var ContainerProduct = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__["default"])("div", {
  target: "e1ykzn6q0",
  label: "ContainerProduct"
})(false ? undefined : {
  name: "1feckq",
  styles: "@media (min-width:768px){display:grid;grid-template-columns:2fr 1fr;column-gap:2rem;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var _ref = false ? undefined : {
  name: "x7kg2o-Product",
  styles: "text-align:center;margin-top:5rem;;label:Product;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref2 = false ? undefined : {
  name: "cfosef-Product",
  styles: "margin:2rem 0;;label:Product;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref3 = false ? undefined : {
  name: "vb0wzx-Product",
  styles: "margin-top:5rem;;label:Product;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref4 = false ? undefined : {
  name: "1r4466o-Product",
  styles: "text-align:center;;label:Product;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var Product = function Product() {
  _s();

  //states
  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])({}),
      product = _useState[0],
      setProduct = _useState[1];

  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_6__["useState"])(false),
      error = _useState2[0],
      setError = _useState2[1]; //Routing to obtain actual id


  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_7__["useRouter"])();
  var id = router.query.id; //firebase context

  var _useContext = Object(react__WEBPACK_IMPORTED_MODULE_6__["useContext"])(_firebase__WEBPACK_IMPORTED_MODULE_9__["FirebaseContext"]),
      firebase = _useContext.firebase,
      userLogged = _useContext.userLogged;

  Object(react__WEBPACK_IMPORTED_MODULE_6__["useEffect"])(function () {
    if (id) {
      var getProduct = /*#__PURE__*/function () {
        var _ref5 = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {
          var productQuery, product;
          return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return firebase.db.collection('products').doc(id);

                case 2:
                  productQuery = _context.sent;
                  _context.next = 5;
                  return productQuery.get();

                case 5:
                  product = _context.sent;

                  if (product.exists) {
                    setProduct(product.data());
                  } else {
                    setError(true);
                  }

                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function getProduct() {
          return _ref5.apply(this, arguments);
        };
      }();

      getProduct();
    }
  }, [id, product]);
  if (Object.keys(product).length === 0) return 'Cargando...';
  var comments = product.comments,
      created = product.created,
      description = product.description,
      company = product.company,
      name = product.name,
      url = product.url,
      urlimage = product.urlimage,
      votes = product.votes,
      creator = product.creator,
      voted = product.voted; //manage votes

  var voteProduct = function voteProduct() {
    if (!userLogged) return router.push('/login');
    if (voted.includes(userLogged.uid)) return;
    var updateVoted = [].concat(Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(voted), [userLogged.uid]);
    firebase.db.collection('products').doc(id).update({
      votes: votes + 1,
      voted: updateVoted
    });
    setProduct(_objectSpread(_objectSpread({}, product), {}, {
      votes: votes + 1
    }));
  };

  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(_components_layout_Layout__WEBPACK_IMPORTED_MODULE_8__["default"], {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 9
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, error && Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(_components_layout_404__WEBPACK_IMPORTED_MODULE_10__["default"], {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 28
    },
    __self: _this
  }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("div", {
    className: "container",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 17
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("h1", {
    css: _ref,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 21
    },
    __self: _this
  }, name), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(ContainerProduct, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 21
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("div", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 25
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("p", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 29
    },
    __self: _this
  }, "Published ", Object(date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_11__["default"])(new Date(created), {
    locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_12__["es"]
  }), " ago"), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("p", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 29
    },
    __self: _this
  }, "By: ", creator.name, " from ", company), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("img", {
    src: urlimage,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 29
    },
    __self: _this
  }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("p", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 29
    },
    __self: _this
  }, description), userLogged && Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(react__WEBPACK_IMPORTED_MODULE_6___default.a.Fragment, null, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("h2", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 37
    },
    __self: _this
  }, "Add a Comment"), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("form", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 37
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(_components_ui_FormStyles__WEBPACK_IMPORTED_MODULE_14__["Field"], {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 41
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("input", {
    type: "text",
    name: "comment",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 45
    },
    __self: _this
  })), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(_components_ui_FormStyles__WEBPACK_IMPORTED_MODULE_14__["InputSubmit"], {
    type: "submit",
    value: "ADD",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 41
    },
    __self: _this
  }))), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("h2", {
    css: _ref2,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 29
    },
    __self: _this
  }, "Comments"), comments.map(function (comment) {
    return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("li", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 115,
        columnNumber: 33
      },
      __self: _this
    }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("p", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 116,
        columnNumber: 37
      },
      __self: _this
    }, comment.name), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("p", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 117,
        columnNumber: 37
      },
      __self: _this
    }, "Author: ", comment.userName));
  })), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("aside", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 121,
      columnNumber: 25
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(_components_ui_CustomButtom__WEBPACK_IMPORTED_MODULE_15__["default"], {
    target: "_blank",
    bgColor: "true",
    href: url,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 29
    },
    __self: _this
  }, "Visit URL"), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("div", {
    css: _ref3,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129,
      columnNumber: 29
    },
    __self: _this
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])("p", {
    css: _ref4,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 33
    },
    __self: _this
  }, votes, " Votes"), userLogged && Object(_emotion_core__WEBPACK_IMPORTED_MODULE_13__["jsx"])(_components_ui_CustomButtom__WEBPACK_IMPORTED_MODULE_15__["default"], {
    onClick: voteProduct,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 37
    },
    __self: _this
  }, "Vote")))))));
};

_s(Product, "YRntqfU2VsoJCUrG96/7OJy4JkM=", false, function () {
  return [next_router__WEBPACK_IMPORTED_MODULE_7__["useRouter"]];
});

_c = Product;
/* harmony default export */ __webpack_exports__["default"] = (Product);

var _c;

$RefreshReg$(_c, "Product");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,